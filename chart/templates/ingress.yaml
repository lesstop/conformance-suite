{{- if .Values.service.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    httpd-server-snippet: |
      RequestHeader set X-Ssl-Cipher "%{SSL_CIPHER}s"
      RequestHeader set X-Ssl-Protocol "%{SSL_PROTOCOL}s"
      RequestHeader set X-Forwarded-Proto https
      RequestHeader set X-Forwarded-Port 443
      <Location "/test-mtls">
        Redirect permanent "{{.Values.service.mtls}}/test-mtls"
      </Location>
spec:
  tls:
  - hosts:
    - {{ template "hostname" .Values.service.url }}
    secretName: {{ template "fullname" . }}-tls
  rules:
  - host: {{ template "hostname" .Values.service.url }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ template "fullname" . }}
            port:
              number: {{ .Values.service.externalPort }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "mtlsfullname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-secret: "default/ca-secret"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "5"
    httpd-server-snippet: |
      RequestHeader set X-Ssl-Cipher "%{SSL_CIPHER}s"
      RequestHeader set X-Ssl-Protocol "%{SSL_PROTOCOL}s"
      RequestHeader set X-Forwarded-Proto https
      RequestHeader set X-Forwarded-Port 443
      SSLVerifyClient optional_no_ca
      SSLVerifyDepth 5
      RequestHeader set X-Ssl-Cert "%{SSL_CLIENT_CERT}s"
      RequestHeader set X-Ssl-Verify "%{SSL_CLIENT_VERIFY}s"
      RequestHeader set X-Ssl-Cert-Chain-0 "%{SSL_CLIENT_CERT_CHAIN_0}s"
      RequestHeader set X-Ssl-Cert-Chain-1 "%{SSL_CLIENT_CERT_CHAIN_1}s"
      RequestHeader set X-Ssl-Cert-Chain-2 "%{SSL_CLIENT_CERT_CHAIN_2}s"
      RequestHeader set X-Ssl-Cert-Chain-3 "%{SSL_CLIENT_CERT_CHAIN_3}s"
      RequestHeader set X-Ssl-Cert-Chain-4 "%{SSL_CLIENT_CERT_CHAIN_4}s"
      RequestHeader set X-Ssl-Cert-Chain-5 "%{SSL_CLIENT_CERT_CHAIN_5}s"
spec:
  tls:
    - hosts:
        - {{ template "hostname" .Values.service.mtls }}
      secretName: {{ template "fullname" . }}-mtls
  rules:
    - host: {{ template "hostname" .Values.service.mtls }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ template "fullname" . }}
                port:
                  number: {{ .Values.service.externalPort }}

{{- end -}}
