{{- if .Values.service.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
  annotations:
    cert-manager.io/issuer: letsencrypt
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: 'nginx'
  tls:
  - hosts:
    - {{ template "hostname" .Values.service.url }}
    secretName: {{ template "fullname" . }}-tls
  rules:
  - host: {{ template "hostname" .Values.service.url }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ template "fullname" . }}
            port:
              number: {{ .Values.service.externalPort }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "mtlsfullname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "5"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional_no_ca"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-secret: "default/ca-secret"
spec:
  ingressClassName: 'nginx'
  tls:
    - hosts:
        - {{ template "hostname" .Values.service.mtls }}
      secretName: {{ template "fullname" . }}-mtls
  rules:
    - host: {{ template "hostname" .Values.service.mtls }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ template "fullname" . }}
                port:
                  number: {{ .Values.service.externalPort }}
{{- end -}}
